# if configure can't find the m_pd.h header         
# specify pd's include path here and ignore the warning
#
#PD_CPPFLAGS=-I/path_to_pd_dir/src
#PD_EXECUTABLE=/path_to_pd_dir/bin/pd
PD_CPPFLAGS=
PD_EXECUTABLE=
PDP_CFLAGS=-DPD -Wall -W -Wstrict-prototypes -Wno-unused -Wno-parentheses -Wno-switch -fPIC -O2 -funroll-loops -fomit-frame-pointer -ffast-math -mmmx  

# these are reused in opengl module
prefix=/usr/local
PDP_VERSION=0.14.1
PDP_TARGET=linux_gcc_mmx

PDP_LIBRARY_NAME = pdp.pd_linux
PDP_EXTRA_CPPFLAGS = 
PDP_EXTRA_CFLAGS = 
SDL_FLAGS = -D_REENTRANT

# optional objects
PDP_OPTMOD =  pdp_v4l.o pdp_xv.o pdp_qt.o pdp_glx.o pdp_sdl.o
PDP_X11MOD = @PDP_X11MOD@
PDP_PDMOD = 
PDP_OPTTYPES =  pdp_matrix.o
PDP_MATRIX_BASIC =  pdp_mat_mul.o pdp_mat_lu.o pdp_mat_vec.o
PDP_IMAGE_BASIC =  pdp_cheby.o
PDP_IMAGE_SPECIAL =  pdp_histo.o

ZL_OPTMOD =  v4l.o xwindow.o xv.o glx.o



PDP_CPPFLAGS =  -I. -I../../system -I/usr/X11R6/include  -I../include -I../../include $(PD_CPPFLAGS) $(PDP_EXTRA_CPPFLAGS) -DPDP_TARGET=$(PDP_TARGET)
PDP_LIBS    = -lgslcblas -lm  -lv4l2   -lgsl -lgslcblas -lm   -lz -lpng -L/usr/X11R6/lib -lX11 -lXv -lXext -lquicktime -lGL -lGLU -lSDL
PDP_AFLAGS  = 
#--gstabs

PDP_CFLAGS += $(SDL_CFLAGS) $(PDP_EXTRA_CFLAGS) -DPDP_VERSION=\"$(PDP_VERSION)\"

ifeq ($(shell uname -s),Darwin)
  PDP_CFLAGS += -fnested-functions
endif

#PDP_CFLAGS  = -DPD -O2 -funroll-loops -fomit-frame-pointer  -ffast-math \
#    -Wall -W -Wstrict-prototypes \
#    -Wno-unused -Wno-parentheses -Wno-switch -DPDP_VERSION=\"$(PDP_VERSION)\" \
#   -g $(SDL_CFLAGS) $(PDP_EXTRA_CFLAGS)
# -Werror
# -Wshadow

# compiler and assembler
#CC = gcc-3.2
#CC = gcc
#AS = as
CC = gcc

# build rules

.c.o:
	$(CC) $(PDP_CFLAGS) $(PDP_CPPFLAGS) -o $*.o -c $*.c
.s.o:
	$(AS) -o $*.o $*.s $(PDP_AFLAGS)
PDP_OPENGL_LIBRARY_NAME=pdp_opengl.pd_linux_gcc_mmx
TARGET=linux_gcc_mmx
